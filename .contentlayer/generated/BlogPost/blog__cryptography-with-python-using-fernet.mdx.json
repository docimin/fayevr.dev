{
  "title": "Cryptography with Python using Fernet",
  "date": "2021-04-10",
  "cannonicalURL": "https://blog.anishde.dev/cryptography-with-python-using-fernet",
  "image": {
    "height": "1080",
    "width": "1920",
    "url": "https://cdn.hashnode.com/res/hashnode/image/upload/v1618046247940%2FJiNf1vAbR.png",
    "type": "CloudinaryImage",
    "_raw": {}
  },
  "body": {
    "raw": "\nLet us look at how to encrypt text and files using Python.\nFor this we are going to be using [Fernet](https://cryptography.io/en/latest/fernet.html) which is a part of python's cryptography package\n\nSo let us get right into it\n\nOk firstly we need to downloaded the cryptography package using `pip`\n\nOn Windows:\n\n```sh\npip install cryptography\n```\n\nOn Linux/macOS:\n\n```sh\npip3 install cryptography\n```\n\nAfter we have executed the command in the terminal, we are ready to start coding.\n\nYou might want to use your favourite code editor (vscode, sublime text, atom etc...) or any IDE.\n\nNow let us first import the required library\n\n```python\nfrom cryptography.fernet import Fernet\n```\n\nThen we are going to define a function that will write the key to a file\n\n```python\ndef write_key():\n    key = Fernet.generate_key() # Generates the key\n    with open(\"key.key\", \"wb\") as key_file: # Opens the file the key is to be written to\n        key_file.write(key) # Writes the key\n```\n\nWe will also write down a function that will help with reading and loading the key into a variable\n\n```python\ndef load_key():\n    return open(\"key.key\", \"rb\").read() #Opens the file, reads and returns the key stored in the file\n```\n\nNow let us take the message we are going to encode as user input and encode it to bytes because that is how fernet works\n\n```python\nmessage = input(\"Message: \").encode() # Takes the message as user input and encodes it\n```\n\nNow we need to write are top secret key to the key file. We are going to run this only once and then comment the line out because we don't want it to write a new key down every time the code is run. \n\n```python\nwrite_key() # Writes the key to the key file\n```\nNow we need to load the key i.e. read the key from the key file and store it in a variable called as `key` though you can name it whatever you want\n\n```python\nkey = load_key() # Loads the key and stores it in a variable\n```\n\nNow we need to initialize the fernet object by passing in the key we just loaded\n\n```python\nf = Fernet(key)\n```\n\nNow let us get to the main part, encrypting the message\nAlso let us print it out\n\n```python\nencrypted_message = f.encrypt(message)\nprint(encrypted_message)\n```\n\nOutput:\n\n![image.png](https://cdn.hashnode.com/res/hashnode/image/upload/v1618045556166/NkVXFrg-7.png)\n\nYou see that the encrypted message cannot be understood by anyone so it is safe now and will be the same unless decrypted with the same key\n\nTo decrypt, it is a very similar process\n```python\ndecrypted_message = f.decrypt(encrypred_message)\nprint(decrypted_message)\n```\n\nOutput:\n\n![image.png](https://cdn.hashnode.com/res/hashnode/image/upload/v1618045676137/GQuPm-UeO.png)\nSo here, first the message is encrypted and is printed out and then we decrypt it and print it in the next line. If the initial message and the decrypted message are the exact same, our code has worked!!!\n\nSo that was it for this tiny blog (and it was my first blog ever so leave down some feedback!!!)\n\n# Video Tutorial:\n[Link](https://youtu.be/P2k4f1tu-ss)\n\n%[https://www.youtube.com/watch?v=P2k4f1tu-ss]\n",
    "code": "var Component=(()=>{var h=Object.create;var r=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var u=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),D=(t,e)=>{for(var a in e)r(t,a,{get:e[a],enumerable:!0})},s=(t,e,a,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of y(e))!m.call(t,l)&&l!==a&&r(t,l,{get:()=>e[l],enumerable:!(d=p(e,l))||d.enumerable});return t};var f=(t,e,a)=>(a=t!=null?h(g(t)):{},s(e||!t||!t.__esModule?r(a,\"default\",{value:t,enumerable:!0}):a,t)),w=t=>s(r({},\"__esModule\",{value:!0}),t);var c=u((b,o)=>{o.exports=_jsx_runtime});var v={};D(v,{default:()=>C,frontmatter:()=>F});var n=f(c()),F={title:\"Cryptography with Python using Fernet\",date:\"2021-04-10\",cannonicalURL:\"https://blog.anishde.dev/cryptography-with-python-using-fernet\",image:{url:\"https://cdn.hashnode.com/res/hashnode/image/upload/v1618046247940%2FJiNf1vAbR.png\",height:\"1080\",width:\"1920\"}};function i(t){let e=Object.assign({p:\"p\",a:\"a\",code:\"code\",div:\"div\",pre:\"pre\",span:\"span\",img:\"img\",h1:\"h1\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[`Let us look at how to encrypt text and files using Python.\nFor this we are going to be using `,(0,n.jsx)(e.a,{href:\"https://cryptography.io/en/latest/fernet.html\",children:\"Fernet\"}),\" which is a part of python's cryptography package\"]}),`\n`,(0,n.jsx)(e.p,{children:\"So let us get right into it\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Ok firstly we need to downloaded the cryptography package using \",(0,n.jsx)(e.code,{children:\"pip\"})]}),`\n`,(0,n.jsx)(e.p,{children:\"On Windows:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"sh\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"sh\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"pip install cryptography\"})})})})}),`\n`,(0,n.jsx)(e.p,{children:\"On Linux/macOS:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"sh\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"sh\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"pip3 install cryptography\"})})})})}),`\n`,(0,n.jsx)(e.p,{children:\"After we have executed the command in the terminal, we are ready to start coding.\"}),`\n`,(0,n.jsx)(e.p,{children:\"You might want to use your favourite code editor (vscode, sublime text, atom etc...) or any IDE.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Now let us first import the required library\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"python\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"python\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FF7B72\"},children:\"from\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\" cryptography.fernet \"}),(0,n.jsx)(e.span,{style:{color:\"#FF7B72\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\" Fernet\"})]})})})}),`\n`,(0,n.jsx)(e.p,{children:\"Then we are going to define a function that will write the key to a file\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"python\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"python\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FF7B72\"},children:\"def\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#D2A8FF\"},children:\"write_key\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"():\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"    key \"}),(0,n.jsx)(e.span,{style:{color:\"#FF7B72\"},children:\"=\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\" Fernet.generate_key() \"}),(0,n.jsx)(e.span,{style:{color:\"#8B949E\"},children:\"# Generates the key\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"    \"}),(0,n.jsx)(e.span,{style:{color:\"#FF7B72\"},children:\"with\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#79C0FF\"},children:\"open\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"(\"}),(0,n.jsx)(e.span,{style:{color:\"#A5D6FF\"},children:'\"key.key\"'}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\", \"}),(0,n.jsx)(e.span,{style:{color:\"#A5D6FF\"},children:'\"wb\"'}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\") \"}),(0,n.jsx)(e.span,{style:{color:\"#FF7B72\"},children:\"as\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\" key_file: \"}),(0,n.jsx)(e.span,{style:{color:\"#8B949E\"},children:\"# Opens the file the key is to be written to\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"        key_file.write(key) \"}),(0,n.jsx)(e.span,{style:{color:\"#8B949E\"},children:\"# Writes the key\"})]})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"We will also write down a function that will help with reading and loading the key into a variable\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"python\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"python\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FF7B72\"},children:\"def\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#D2A8FF\"},children:\"load_key\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"():\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"    \"}),(0,n.jsx)(e.span,{style:{color:\"#FF7B72\"},children:\"return\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#79C0FF\"},children:\"open\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"(\"}),(0,n.jsx)(e.span,{style:{color:\"#A5D6FF\"},children:'\"key.key\"'}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\", \"}),(0,n.jsx)(e.span,{style:{color:\"#A5D6FF\"},children:'\"rb\"'}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\").read() \"}),(0,n.jsx)(e.span,{style:{color:\"#8B949E\"},children:\"#Opens the file, reads and returns the key stored in the file\"})]})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"Now let us take the message we are going to encode as user input and encode it to bytes because that is how fernet works\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"python\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"python\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"message \"}),(0,n.jsx)(e.span,{style:{color:\"#FF7B72\"},children:\"=\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#79C0FF\"},children:\"input\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"(\"}),(0,n.jsx)(e.span,{style:{color:\"#A5D6FF\"},children:'\"Message: \"'}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\").encode() \"}),(0,n.jsx)(e.span,{style:{color:\"#8B949E\"},children:\"# Takes the message as user input and encodes it\"})]})})})}),`\n`,(0,n.jsx)(e.p,{children:\"Now we need to write are top secret key to the key file. We are going to run this only once and then comment the line out because we don't want it to write a new key down every time the code is run.\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"python\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"python\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"write_key() \"}),(0,n.jsx)(e.span,{style:{color:\"#8B949E\"},children:\"# Writes the key to the key file\"})]})})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Now we need to load the key i.e. read the key from the key file and store it in a variable called as \",(0,n.jsx)(e.code,{children:\"key\"}),\" though you can name it whatever you want\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"python\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"python\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"key \"}),(0,n.jsx)(e.span,{style:{color:\"#FF7B72\"},children:\"=\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\" load_key() \"}),(0,n.jsx)(e.span,{style:{color:\"#8B949E\"},children:\"# Loads the key and stores it in a variable\"})]})})})}),`\n`,(0,n.jsx)(e.p,{children:\"Now we need to initialize the fernet object by passing in the key we just loaded\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"python\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"python\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"f \"}),(0,n.jsx)(e.span,{style:{color:\"#FF7B72\"},children:\"=\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\" Fernet(key)\"})]})})})}),`\n`,(0,n.jsx)(e.p,{children:`Now let us get to the main part, encrypting the message\nAlso let us print it out`}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"python\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"python\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"encrypted_message \"}),(0,n.jsx)(e.span,{style:{color:\"#FF7B72\"},children:\"=\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\" f.encrypt(message)\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#79C0FF\"},children:\"print\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"(encrypted_message)\"})]})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"Output:\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://cdn.hashnode.com/res/hashnode/image/upload/v1618045556166/NkVXFrg-7.png\",alt:\"image.png\"})}),`\n`,(0,n.jsx)(e.p,{children:\"You see that the encrypted message cannot be understood by anyone so it is safe now and will be the same unless decrypted with the same key\"}),`\n`,(0,n.jsx)(e.p,{children:\"To decrypt, it is a very similar process\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"python\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"python\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"decrypted_message \"}),(0,n.jsx)(e.span,{style:{color:\"#FF7B72\"},children:\"=\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\" f.decrypt(encrypred_message)\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#79C0FF\"},children:\"print\"}),(0,n.jsx)(e.span,{style:{color:\"#C9D1D9\"},children:\"(decrypted_message)\"})]})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"Output:\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.img,{src:\"https://cdn.hashnode.com/res/hashnode/image/upload/v1618045676137/GQuPm-UeO.png\",alt:\"image.png\"}),`\nSo here, first the message is encrypted and is printed out and then we decrypt it and print it in the next line. If the initial message and the decrypted message are the exact same, our code has worked!!!`]}),`\n`,(0,n.jsx)(e.p,{children:\"So that was it for this tiny blog (and it was my first blog ever so leave down some feedback!!!)\"}),`\n`,(0,n.jsxs)(e.h1,{id:\"video-tutorial\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#video-tutorial\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Video Tutorial:\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://youtu.be/P2k4f1tu-ss\",children:\"Link\"})}),`\n`,(0,n.jsx)(e.p,{children:\"%[https://www.youtube.com/watch?v=P2k4f1tu-ss]\"})]})}function k(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(i,t)})):i(t)}var C=k;return w(v);})();\n;return Component;"
  },
  "_id": "blog/cryptography-with-python-using-fernet.mdx",
  "_raw": {
    "sourceFilePath": "blog/cryptography-with-python-using-fernet.mdx",
    "sourceFileName": "cryptography-with-python-using-fernet.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/cryptography-with-python-using-fernet"
  },
  "type": "BlogPost",
  "slug": "cryptography-with-python-using-fernet",
  "dateUpdated": "Sat Oct 29 2022",
  "readingTime": {
    "text": "3 min read",
    "minutes": 2.445,
    "time": 146700,
    "words": 489
  },
  "wordCount": 491
}