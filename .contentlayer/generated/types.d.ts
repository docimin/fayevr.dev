// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

// export type Image = string
export type { Markdown, MDX }

/** Document types */
export type Achievement = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Achievement'
  /** The title of the achievement */
  title: string
  /** The date when the achievement was achieved */
  date?: string | undefined
  /** The value of the prize */
  prizeValue?: string | undefined
  proof?: Proof | undefined
  /** MDX file body */
  body: MDX
  slug: string
}

export type BlogPost = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'BlogPost'
  /** The title of the blog post */
  title: string
  /** The date of the blog post */
  date: string
  /** The link to the blog post */
  cannonicalURL?: string | undefined
  /** Image for the blog post */
  image?: CloudinaryImage | undefined
  /** MDX file body */
  body: MDX
  slug: string
  dateUpdated: string
  readingTime: json
  wordCount: number
}

export type Project = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Project'
  /** The name of the project */
  name: string
  /** The description of the project */
  description: string
  /** The link to the project's page */
  link?: string | undefined
  /** The link to the project's github page */
  githubLink?: string | undefined
  /** The name of the icon to use */
  iconName: string
  /** Image for the project */
  image?: CloudinaryImage | undefined
  /** MDX file body */
  body: MDX
  slug: string
}  

/** Nested types */
export type CloudinaryImage = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'CloudinaryImage'
  /** Height of the image */
  height: number
  /** Width of the image */
  width: number
  /** URL of the image */
  url: string

}

export type Proof = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Proof'
  /** Title of the proof */
  title: string
  /** URL to the proof */
  url: string

}  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Achievement | BlogPost | Project
export type DocumentTypeNames = 'Achievement' | 'BlogPost' | 'Project'

export type NestedTypes = CloudinaryImage | Proof
export type NestedTypeNames = 'CloudinaryImage' | 'Proof'


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Achievement: Achievement
  BlogPost: BlogPost
  Project: Project
}

export type NestedTypeMap = {
  CloudinaryImage: CloudinaryImage
  Proof: Proof
}

 